/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CONTROLLER_H_RPCGEN
#define _CONTROLLER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

/*
 *	locomotionStruct.h definitions
 */

#ifndef LOCOMOTIONSTRUCT_H
#define	LOCOMOTIONSTRUCT_H
struct POSITION {
	float n[3];
	float o[3];
	float a[3];
	float p[3];
};
typedef struct POSITION POSITION;

struct SERVOS {
	int num_servos;
	float q[5];
};
typedef struct SERVOS SERVOS;

struct ANGLEROTATE {
	int axis;
	float angle;
};
typedef struct ANGLEROTATE ANGLEROTATE;
#endif

/*
 *	clampStruct.h definitions
 */
#ifndef CLAMPSTRUCT_H
#define	CLAMPSTRUCT_H

struct GRIP_STATE {
	double open;
	int barrier;
};
typedef struct GRIP_STATE GRIP_STATE;

struct COLORRGB {
	int red;
	int green;
	int blue;
	double tolerance;
	int idname;
	char code[7];
};
typedef struct COLORRGB COLORRGB;
#endif


/*
 *	proximityStruct.h definitions
 */
#ifndef PROXIMITYSTRUCT_H
#define	PROXIMITYSTRUCT_H
struct PROXIMITYSENSORS {
	int num_left_sensors;
	double left_sensors[10];
	int num_right_sensors;
	double right_sensors[10];
	int num_top_sensors;
	double top_sensors[10];
	int num_back_sensors;
	double back_sensors[10];
};
typedef struct PROXIMITYSENSORS PROXIMITYSENSORS;
#endif

#define CONTROLLER 0x20000001
#define CONTROLLERVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define INITCONTROLLER 1
extern  int * initcontroller_1(void *, CLIENT *);
extern  int * initcontroller_1_svc(void *, struct svc_req *);
#define MOVECONTROLLER 2
extern  int * movecontroller_1(POSITION *, CLIENT *);
extern  int * movecontroller_1_svc(POSITION *, struct svc_req *);
#define MOVETOCONTROLLER 3
extern  int * movetocontroller_1(POSITION *, CLIENT *);
extern  int * movetocontroller_1_svc(POSITION *, struct svc_req *);
#define ROTATECONTROLLER 4
extern  int * rotatecontroller_1(ANGLEROTATE *, CLIENT *);
extern  int * rotatecontroller_1_svc(ANGLEROTATE *, struct svc_req *);
#define GETPOSCONTROLLER 5
extern  POSITION * getposcontroller_1(void *, CLIENT *);
extern  POSITION * getposcontroller_1_svc(void *, struct svc_req *);
#define GETSERVOSCONTROLLER 6
extern  SERVOS * getservoscontroller_1(void *, CLIENT *);
extern  SERVOS * getservoscontroller_1_svc(void *, struct svc_req *);
#define CHECKERROR 7
extern  int * checkerror_1(void *, CLIENT *);
extern  int * checkerror_1_svc(void *, struct svc_req *);
#define SETGRIPCONTROLLER 8
extern  int * setgripcontroller_1(double *, CLIENT *);
extern  int * setgripcontroller_1_svc(double *, struct svc_req *);
#define CHECKBARRIERCONTROLLER 9
extern  int * checkbarriercontroller_1(void *, CLIENT *);
extern  int * checkbarriercontroller_1_svc(void *, struct svc_req *);
#define GETCOLORCONTROLLER 10
extern  COLORRGB * getcolorcontroller_1(void *, CLIENT *);
extern  COLORRGB * getcolorcontroller_1_svc(void *, struct svc_req *);
#define GETSENSORSCONTROLLER 11
extern  PROXIMITYSENSORS * getsensorscontroller_1(void *, CLIENT *);
extern  PROXIMITYSENSORS * getsensorscontroller_1_svc(void *, struct svc_req *);
extern int controller_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define INITCONTROLLER 1
extern  int * initcontroller_1();
extern  int * initcontroller_1_svc();
#define MOVECONTROLLER 2
extern  int * movecontroller_1();
extern  int * movecontroller_1_svc();
#define MOVETOCONTROLLER 3
extern  int * movetocontroller_1();
extern  int * movetocontroller_1_svc();
#define ROTATECONTROLLER 4
extern  int * rotatecontroller_1();
extern  int * rotatecontroller_1_svc();
#define GETPOSCONTROLLER 5
extern  POSITION * getposcontroller_1();
extern  POSITION * getposcontroller_1_svc();
#define GETSERVOSCONTROLLER 6
extern  SERVOS * getservoscontroller_1();
extern  SERVOS * getservoscontroller_1_svc();
#define CHECKERROR 7
extern  int * checkerror_1();
extern  int * checkerror_1_svc();
#define SETGRIPCONTROLLER 8
extern  int * setgripcontroller_1();
extern  int * setgripcontroller_1_svc();
#define CHECKBARRIERCONTROLLER 9
extern  int * checkbarriercontroller_1();
extern  int * checkbarriercontroller_1_svc();
#define GETCOLORCONTROLLER 10
extern  COLORRGB * getcolorcontroller_1();
extern  COLORRGB * getcolorcontroller_1_svc();
#define GETSENSORSCONTROLLER 11
extern  PROXIMITYSENSORS * getsensorscontroller_1();
extern  PROXIMITYSENSORS * getsensorscontroller_1_svc();
extern int controller_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_POSITION (XDR *, POSITION*);
extern  bool_t xdr_SERVOS (XDR *, SERVOS*);
extern  bool_t xdr_ANGLEROTATE (XDR *, ANGLEROTATE*);
extern  bool_t xdr_GRIP_STATE (XDR *, GRIP_STATE*);
extern  bool_t xdr_COLORRGB (XDR *, COLORRGB*);
extern  bool_t xdr_PROXIMITYSENSORS (XDR *, PROXIMITYSENSORS*);

#else /* K&R C */
extern bool_t xdr_POSITION ();
extern bool_t xdr_SERVOS ();
extern bool_t xdr_ANGLEROTATE ();
extern bool_t xdr_GRIP_STATE ();
extern bool_t xdr_COLORRGB ();
extern bool_t xdr_PROXIMITYSENSORS ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CONTROLLER_H_RPCGEN */
