(define (domain MoBAr-Arm)
    (:requirements :strips :typing :fluents :durative-actions)
    (:types pos block - object)
    (:predicates
        (arm-empty)
        (arm-position ?p - pos)
        (table-clear ?p - pos)
        (hold ?b - block)
        (clear ?b - block)
        (last_is_move)
        (position ?b - block ?p - pos)
        ; Bloque 2 encima de 1
        (on ?b1 ?b2 - block)
    )

    (:functions
        (distance_to_move ?p1 ?p2 - pos)
        (speed)
	(distance)
    )

    (:durative-action move-arm
     :parameters (?p1 ?p2 - pos)
     :duration (= ?duration (/ (distance_to_move ?p1 ?p2)(speed)) )
     :condition (and (at start (arm-position ?p1))
                     (at start (not (last_is_move))) )
     :effect (and (at start (not (arm-position ?p1)))
                  (at end (arm-position ?p2))
                  (at end (last_is_move))
	  	  (at end (increase (distance) (distance_to_move ?p1 ?p2))) )
    )

    (:durative-action grip-block-on-table
     :parameters (?b - block ?p - pos)
     :duration (= ?duration 1)
     :condition (and (over all (arm-position ?p))
                     (at start (arm-empty))
                     (at start (position ?b ?p))
                     (at start (clear ?b)) )
     :effect (and (at end (not (arm-empty)))
                  (at end (hold ?b))
                  (at end (table-clear ?p))
                  (at end (not (clear ?b)))
                  (at end (not (position ?b ?p)))
                  (at end (not (last_is_move))) )
    )

    (:durative-action grip-block-on-block
     :parameters (?b1 - block ?p - pos ?b2 - block)
     :duration (= ?duration 1)
     :condition (and (over all (arm-position ?p))
                     (at start (arm-empty))
                     (at start (position ?b1 ?p))
                     (at start (position ?b2 ?p))
                     (at start (on ?b1 ?b2))
                     (at start (clear ?b2)) )
     :effect (and (at end (not (arm-empty)))
                  (at end (hold ?b2))
                  (at end (not (on ?b1 ?b2)))
                  (at end (clear ?b1))
                  (at end (not (clear ?b2)))
                  (at end (not (position ?b2 ?p)))
                  (at end (not (last_is_move))) )
    )

    (:durative-action put-on-table
	 :parameters (?b - block ?p - pos)
	 :duration (= ?duration 1)
	 :condition (and (over all (arm-position ?p))
                     (at start (hold ?b))
                     (at start (table-clear ?p)) )
	 :effect (and (at end (not (table-clear ?p)))
                  (at end (clear ?b))
                  (at end (position ?b ?p))
                  (at end (not (hold ?b)))
                  (at end (arm-empty))
                  (at end (not (last_is_move))) )
	)

    (:durative-action put-on-block
	 :parameters (?b1 - block ?p - pos ?b2 - block)
	 :duration (= ?duration 1)
	 :condition (and (over all (arm-position ?p))
                     (over all (position ?b1 ?p))
                     (at start (clear ?b1))
                     (at start (hold ?b2)) )
	 :effect (and (at end (not (clear ?b1)))
                  (at end (clear ?b2))
                  (at end (on ?b1 ?b2))
                  (at end (position ?b2 ?p))
                  (at end (not (hold ?b2)))
                  (at end (arm-empty))
                  (at end (not (last_is_move))) )
	)

)
